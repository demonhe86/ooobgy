/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.ooobgy.ifnote.struts.action;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;

import com.ooobgy.ifnote.dbctrler.dao.Inote_CashDao;
import com.ooobgy.ifnote.dbctrler.dao.Inote_DepositDao;
import com.ooobgy.ifnote.dbctrler.dao.Inote_FundDao;
import com.ooobgy.ifnote.dbctrler.dao.Inote_FuturesDao;
import com.ooobgy.ifnote.dbctrler.dao.Inote_LoanDao;
import com.ooobgy.ifnote.dbctrler.dao.Inote_StockDao;
import com.ooobgy.ifnote.dbctrler.daoimpl.Inote_CashDaoImpl;
import com.ooobgy.ifnote.dbctrler.daoimpl.Inote_DepositDaoImpl;
import com.ooobgy.ifnote.dbctrler.daoimpl.Inote_FundDaoImpl;
import com.ooobgy.ifnote.dbctrler.daoimpl.Inote_FuturesDaoImpl;
import com.ooobgy.ifnote.dbctrler.daoimpl.Inote_LoanDaoImpl;
import com.ooobgy.ifnote.dbctrler.daoimpl.Inote_StockDaoImpl;
import com.ooobgy.ifnote.entity.Inote_Cash;
import com.ooobgy.ifnote.entity.Inote_Deposit;
import com.ooobgy.ifnote.entity.Inote_Fund;
import com.ooobgy.ifnote.entity.Inote_Futures;
import com.ooobgy.ifnote.entity.Inote_Loan;
import com.ooobgy.ifnote.entity.Inote_Stock;
import com.ooobgy.ifnote.struts.form.DelNoteForm;

/** 
 * MyEclipse Struts
 * Creation date: 08-23-2011
 * 
 * XDoclet definition:
 * @struts.action path="/delNote" name="delNoteForm" input="/user/cashList.jsp" scope="request" validate="true"
 */
public class DelNoteAction extends Action {
	/*
	 * Generated Methods
	 */

	/** 
	 * Method execute
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward execute(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		DelNoteForm delNoteForm = (DelNoteForm) form;
		Integer nid = 0;
		try {
			nid = Integer.parseInt(delNoteForm.getDelNid());
		} catch (Throwable e) {
			e.printStackTrace();
			return mapping.findForward("error");
		}
		
		String type = delNoteForm.getDelType();
		if (type == null || type.trim().length() == 0) {
			return mapping.findForward("error");
		}
		if (type.equals("cash")) {
			Inote_CashDao dao = new Inote_CashDaoImpl();
			Inote_Cash inote = dao.findWithId(nid);
			dao.delete(inote);
			return mapping.findForward("cashList");
		} else if (type.equals("deposit")) {
			Inote_DepositDao dao = new Inote_DepositDaoImpl();
			Inote_Deposit inote = dao.findWithId(nid);
			dao.delete(inote);
			return mapping.findForward("depositList");
		} else if (type.equals("fund")) {
			Inote_FundDao dao = new Inote_FundDaoImpl();
			Inote_Fund inote = dao.findWithId(nid);
			dao.delete(inote);
			return mapping.findForward("fundList");
		} else if (type.equals("futures")) {
			Inote_FuturesDao dao = new Inote_FuturesDaoImpl();
			Inote_Futures inote = dao.findWithId(nid);
			dao.delete(inote);
			return mapping.findForward("futuresList");
		} else if (type.equals("loan")) {
			Inote_LoanDao dao = new Inote_LoanDaoImpl();
			Inote_Loan inote = dao.findWithId(nid);
			dao.delete(inote);
			return mapping.findForward("loanList");
		} else if (type.equals("stock")) {
			Inote_StockDao dao = new Inote_StockDaoImpl();
			Inote_Stock inote = dao.findWithId(nid);
			dao.delete(inote);
			return mapping.findForward("stockList");
		}
		
		
		return mapping.findForward("error");
	}
}